    1  sudo apt update  ...[or] sudo apt-get update
    1  sudo apt upgrade
    5  sudo apt install git
    
Install virtualenv and a django project req:
   16  python3 --version  ...[or] python3 -V
   10  sudo apt install virtualenv
   12  virtualenv venv -p python
   19  source venv/bin/activate
   21  pip install -r requirements 
   23  python manage.py runserver   ...[or] python3 manage.py runserver

Install node:
   32  node -v
   33  npm -v
   34  npx -v
   43  sudo apt install curl
   47  curl -sL https://deb.nodesource.com/setup_16.x | sudo -E bash -
   50  sudo apt-get install -y nodejs
   48  node -v
   49  npm -v
   51  npx -v

## To install the Yarn package manager, run:
     curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | gpg --dearmor | sudo tee /usr/share/keyrings/yarnkey.gpg >/dev/null
     echo "deb [signed-by=/usr/share/keyrings/yarnkey.gpg] https://dl.yarnpkg.com/debian stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
     sudo apt-get update && sudo apt-get install yarn
     yarn --version   ...[or]  yarn -v

Creat frontend new project:
     npx create-react-app <project name>   #React
     npm start   ...[or] npm run start

     npx create-next-app --example with-tailwindcss   #Next with tailwind
     npx create-next-app --tailwindcss   #Next with tailwind and all dependencies

     npx create-next-app@latest --ts   #TypeScript

Install packages:
	npm install --save <packages> 
	npm install --save react-apexcharts apexcharts dayjs
	npm install tailwindcss postcss autoprefixer
	npx i react-apexcharts dayjs next/dynamic axios 

Install net-tools and Nmap to scan ip information:
     sudo apt install net-tools
     ifconfig
     arp -a

     sudo apt-get install nmap -y
     sudo nmap -sT -O 192.168.1.0/24

Install putty:
     sudo apt update
     sudo apt install -y putty
     putty --version  #Verify Installation
     putty  #Run PuTTY


Copy files from server to localhost:
    mkdir new
    cd new
    scp -P 2222 -r root@128.999.22.88:/home/algo/configs/128.999.22.86/wireguard/* /home/thehill/Downloads/new/

Server Port changing:
    sudo nano /etc/ssh/sshd_config
    # change From: #Port 22
	          To: Port 2222
    sudo systemctl reload sshd
    sudo ufw allow 2222/tcp
    useradd -M <username>
    passwd <username>
    ssh -p 2222 user@localhost

Connect to server:
     ssh root@128.999.22.86 -p 2222 -D localhost:2080
     # Then set socks host in network proxy

Server active tunnels:
     ps aux | grep 'sshd'

Server users and groups:
     sudo useradd -M USERNAME  # Create user with without a home directory
     sudo passwd USERNAME  # Create password for the user
     less /etc/passwd  ...[or] compgen -u  # users list
     sudo usermod -L USERNAME  # Locks the user out of logging in
     sudo usermod -U USERNAME  # Unlocks the user
     grep username /etc/shadow  # Check whether the user is locked
     # (it is locked if contain "!" after username)

     sudo groupadd mygroup  # Create new group
     sudo usermod -a -G mygroup mohammad  # Add a user to the group
     grep mygroup /etc/group  # Group members list

Forward all traffic to server:
     sudo apt-get install sshuttle
     sudo sshuttle -r root@128.999.22.86:2200 0.0.0.0/0 --dns -x 128.999.22.86
     # For hotspot sharing:
     sudo sshuttle -r root@128.999.22.86:2200 0.0.0.0/0 --dns -x 128.999.22.86 -l 0.0.0.0:0

Mirror monitors in ubuntu:
     xrandr --listmonitors  ...[or] xrandr -q  # Displays list

     xrandr --output HDMI-A-2 --same-as DisplayPort-1 --mode 1680x1050  # Mirror monitor while keeping lower display quality
        ...[or]
     xrandr --output HDMI-A-3 --output DisplayPort-1 --output HDMI-A-2 --same-as DisplayPort-1 --mode 1680x1050
     
     xrandr --output DisplayPort-1 --same-as HDMI-A-2 --scale 2.2857x2.057  # Mirror monitor while keeping higher display quality
